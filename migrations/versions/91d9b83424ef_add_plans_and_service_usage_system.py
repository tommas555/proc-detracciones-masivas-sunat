"""Add plans and service usage system

Revision ID: 91d9b83424ef
Revises: 8a419ab8929c
Create Date: 2025-10-08 10:51:02.476425

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '91d9b83424ef'
down_revision = '8a419ab8929c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plan')
    op.drop_table('service')
    op.drop_table('service_error_log')
    op.drop_table('user_plan_subscription')
    op.drop_table('service_usage_log')
    op.drop_table('plan_service_quota')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plan_service_quota',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('plan_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('xml_quota', sa.INTEGER(), server_default=sa.text('(-1)'), nullable=True),
    sa.Column('runs_quota', sa.INTEGER(), server_default=sa.text('(-1)'), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plan_id', 'service_id')
    )
    op.create_table('service_usage_log',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.Column('xml_processed', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('files_uploaded', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('success', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True),
    sa.Column('lote_number', sa.VARCHAR(length=10), nullable=True),
    sa.Column('processing_time_seconds', sa.REAL(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('started_at', sa.NUMERIC(), nullable=True),
    sa.Column('completed_at', sa.NUMERIC(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['service.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_plan_subscription',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('plan_id', sa.INTEGER(), nullable=False),
    sa.Column('starts_at', sa.NUMERIC(), nullable=False),
    sa.Column('ends_at', sa.NUMERIC(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True),
    sa.Column('auto_renew', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.Column('created_at', sa.NUMERIC(), nullable=True),
    sa.Column('created_by_admin_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_admin_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_error_log',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('usage_log_id', sa.INTEGER(), nullable=False),
    sa.Column('error_type', sa.VARCHAR(length=100), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('stack_trace', sa.TEXT(), nullable=True),
    sa.Column('occurred_at', sa.NUMERIC(), nullable=True),
    sa.ForeignKeyConstraint(['usage_log_id'], ['service_usage_log.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True),
    sa.Column('created_at', sa.NUMERIC(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('slug', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('price_monthly', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True),
    sa.Column('is_unlimited', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.Column('created_at', sa.NUMERIC(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
